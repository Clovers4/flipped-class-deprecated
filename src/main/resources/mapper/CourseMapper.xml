<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.templab.flippedclass.dao.CourseDao">
    <resultMap id="BaseResultMap" type="online.templab.flippedclass.domain.Course">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="intro" jdbcType="VARCHAR" property="intro"/>
        <result column="share_team_master_course_id" jdbcType="INTEGER" property="shareTeamMasterCourseId"/>
        <result column="share_seminar_master_course_id" jdbcType="INTEGER" property="shareSeminarMasterCourseId"/>
        <result column="presentation_weight" jdbcType="DECIMAL" property="presentationWeight"/>
        <result column="report_weight" jdbcType="DECIMAL" property="reportWeight"/>
        <result column="quetion_weight" jdbcType="DECIMAL" property="quetionWeight"/>
    </resultMap>
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from course
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="online.templab.flippedclass.domain.Course">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into course (teacher_id, `name`, intro,
        share_team_master_course_id, share_seminar_master_course_id,
        presentation_weight, report_weight, quetion_weight
        )
        values (#{teacherId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
        #{shareTeamMasterCourseId,jdbcType=INTEGER}, #{shareSeminarMasterCourseId,jdbcType=INTEGER},
        #{presentationWeight,jdbcType=DECIMAL}, #{reportWeight,jdbcType=DECIMAL}, #{quetionWeight,jdbcType=DECIMAL}
        )
    </insert>
    <update id="updateById" parameterType="online.templab.flippedclass.domain.Course">
        update course
        <set>
            <if test="teacher_id != null">teacher_id = #{teacherId},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="intro != null">intro = #{intro},</if>
            <if test="share_team_master_course_id != null">share_team_master_course_id = #{shareTeamMasterCourseId},
            </if>
            <if test="share_seminar_master_course_id != null">share_seminar_master_course_id =
                #{shareSeminarMasterCourseId},
            </if>
            <if test="presentation_weight != null">presentation_weight = #{presentationWeight},</if>
            <if test="report_weight != null">report_weight = #{reportWeight},</if>
            <if test="quetion_weight != null">quetion_weight = #{quetionWeight}</if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
            id,
            teacher_id,
            `name`,
            intro,
            share_team_master_course_id,
            share_seminar_master_course_id,
            presentation_weight,
            report_weight,
            quetion_weight
        from course
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listAll" resultMap="BaseResultMap">
        select
            id,
            teacher_id,
            `name`,
            intro,
            share_team_master_course_id,
            share_seminar_master_course_id,
            presentation_weight,
            report_weight,
            quetion_weight
        from course
    </select>
    <select id="listByTeacherId" parameterType="integer" resultMap="BaseResultMap">
        select
            id,
            teacher_id,
            `name`,
            intro,
            share_team_master_course_id,
            share_seminar_master_course_id,
            presentation_weight,
            report_weight,
            quetion_weight
        from course
        where teacher_id = #{teacher_id}
    </select>

    <select id="listByStudentId" parameterType="integer" resultMap="BaseResultMap">
        select
            course.id as id,
            teacher_id,
            `name`,
            intro,
            share_team_master_course_id,
            share_seminar_master_course_id,
            presentation_weight,
            report_weight,
            quetion_weight
        from course, klass, klass_student
        where teacher_id = #{teacher_id} and
              course.id = course_id and
              klass.id = klass_id
    </select>

</mapper>