<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="online.templab.flippedclass.dao.UserDao">

    <resultMap id="BaseResultMap" type="User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="role" jdbcType="TINYINT" property="role"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="activative" jdbcType="BIT" property="activative"/>
    </resultMap>

    <insert id="insert" parameterType="User">
        <selectKey keyProperty="id" order="AFTER" resultType="integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (account, `password`, `role`,
        email, activative)
        values (#{account}, #{password}, #{role},
        #{email}, #{activative})
    </insert>

    <delete id="deleteById" parameterType="integer">
        delete from user
        where id = #{id}
    </delete>

    <update id="updateById" parameterType="User">
        update user
        <set>
            <if test="account != null">
                account = #{account},
            </if>
            <if test="password != null">
                `password` = #{password},
            </if>
            <if test="role != null">
                `role` = #{role},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="activative != null">
                activative = #{activative}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="getById" parameterType="integer" resultMap="BaseResultMap">
        select
            id,
            account,
            `password`,
            `role`,
            email,
            activative
        from user
        where id = #{id}
    </select>

    <select id="getByAccount" parameterType="User" resultMap="BaseResultMap">
        select
            id,
            account,
            `password`,
            `role`,
            email,
            activative
        from user
        where account = #{account}
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        select
            id,
            account,
            `password`,
            `role`,
            email,
            activative
        from user
    </select>
</mapper>